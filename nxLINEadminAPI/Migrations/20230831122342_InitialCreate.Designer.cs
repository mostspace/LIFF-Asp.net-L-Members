// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using nxLINEadminAPI.Entity;

#nullable disable

namespace nxLINEadminAPI.Migrations
{
    [DbContext(typeof(nxLINEadminAPIContext))]
    [Migration("20230831122342_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Japanese_CI_AS")
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("nxLINEadminAPI.Entity.LineAccount", b =>
                {
                    b.Property<int>("LineaccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("lineaccount_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LineaccountId"));

                    b.Property<int?>("EntryPoint")
                        .HasColumnType("int")
                        .HasColumnName("entrypoint");

                    b.Property<bool>("IsProfile")
                        .HasColumnType("bit")
                        .HasColumnName("isprofile");

                    b.Property<bool>("IsSmaregi")
                        .HasColumnType("bit")
                        .HasColumnName("issmaregi");

                    b.Property<bool>("Istalk")
                        .HasColumnType("bit")
                        .HasColumnName("istalk");

                    b.Property<string>("LineChannelAccessToken")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("line_channelaccesstoken");

                    b.Property<string>("LineChannelId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("line_channelid");

                    b.Property<string>("LineChannelSecret")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("line_channelsecret");

                    b.Property<string>("LineaccountCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("lineaccount_code");

                    b.Property<DateTime?>("LineaccountCreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("lineaccount_created");

                    b.Property<DateTime?>("LineaccountDeleted")
                        .HasColumnType("datetime2")
                        .HasColumnName("lineaccount_deleted");

                    b.Property<string>("LineaccountEmail")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("lineaccount_email");

                    b.Property<string>("LineaccountLogoUrl")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("lineaccount_logourl");

                    b.Property<string>("LineaccountName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("lineaccount_name");

                    b.Property<string>("LineaccountShortcode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("lineaccount_shortcode");

                    b.Property<DateTime?>("LineaccountUpdated")
                        .HasColumnType("datetime2")
                        .HasColumnName("lineaccount_updated");

                    b.Property<string>("MembersCardColor")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("memberscard_color");

                    b.Property<string>("MembersCardDesignUrl")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("memberscard_designurl");

                    b.Property<bool>("MembersCardIsUseCamera")
                        .HasColumnType("bit")
                        .HasColumnName("memberscard_isusecamera");

                    b.Property<string>("MembersCardLiffId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("memberscard_liffid");

                    b.Property<int?>("PointExpire")
                        .HasColumnType("int")
                        .HasColumnName("pointexpire");

                    b.Property<string>("ProfileSetting")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("profile_setting");

                    b.Property<string>("SmaregiContractId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("smaregi_contractid");

                    b.Property<int?>("StartRank")
                        .HasColumnType("int")
                        .HasColumnName("startrank");

                    b.Property<string>("TalkMessage")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("talkmessage");

                    b.HasKey("LineaccountId");

                    b.ToTable("lineaccount", (string)null);
                });

            modelBuilder.Entity("nxLINEadminAPI.Entity.Member", b =>
                {
                    b.Property<int>("member_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("member_id"));

                    b.Property<string>("member_address")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<byte?>("member_allow_email")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("member_birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("member_code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("member_createat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("member_deleteat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("member_drop_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("member_email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("member_email_verify_expired_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("member_email_verify_token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("member_fax")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("member_firstname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("member_firstname_kana")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte>("member_gender")
                        .HasColumnType("tinyint");

                    b.Property<int?>("member_hold_point")
                        .HasColumnType("int");

                    b.Property<bool>("member_is_password_reset_verified")
                        .HasColumnType("bit");

                    b.Property<bool>("member_is_signup_verified")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("member_join_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("member_last_pointget_date")
                        .HasColumnType("datetime2");

                    b.Property<short?>("member_last_pointget_point")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("member_last_visit_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("member_lastname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("member_lastname_kana")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("member_lineid")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("member_mobile")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("member_nonce")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("member_note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("member_ordinal")
                        .HasColumnType("int");

                    b.Property<string>("member_password_hash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("member_password_reset_token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("member_password_reset_verify_expired_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("member_password_salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("member_pending_email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("member_pending_email_verify_token")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("member_point_limit_date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("member_pos_id")
                        .HasColumnType("int");

                    b.Property<string>("member_pref")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("member_rank")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("member_searchtext")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("member_shop_id")
                        .HasColumnType("int");

                    b.Property<string>("member_signup_verify_token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("member_status")
                        .HasColumnType("tinyint");

                    b.Property<string>("member_stripeId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("member_tag")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("member_tel")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("member_updateat")
                        .HasColumnType("datetime2");

                    b.Property<bool>("member_visibility")
                        .HasColumnType("bit");

                    b.Property<string>("member_zipcode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("member_id");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("nxLINEadminAPI.Entity.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<DateTime>("UserCreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("user_created");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("user_email");

                    b.Property<DateTime?>("UserLastlogindatetime")
                        .HasColumnType("datetime")
                        .HasColumnName("user_lastlogindatetime");

                    b.Property<int?>("UserLineAccountID")
                        .HasColumnType("int")
                        .HasColumnName("user_lineaccount_id");

                    b.Property<string>("UserLineAccountRole")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("user_lineaccount_role");

                    b.Property<string>("UserLoginId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("user_loginid");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("user_name");

                    b.Property<string>("UserPwd")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("user_pwd");

                    b.Property<DateTime?>("UserUpdated")
                        .HasColumnType("datetime2")
                        .HasColumnName("user_updated");

                    b.HasKey("UserId");

                    b.ToTable("user", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
